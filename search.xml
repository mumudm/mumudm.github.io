<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>HTML 学习笔记</title>
      <link href="/posts/f7e7c0e5.html"/>
      <url>/posts/f7e7c0e5.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><ul><li>HTML 指的是<strong>超文本标记语言</strong> (Hyper Text Markup Language)是用来描述网页的一种语言。</li><li>HTML 不是一种编程语言，而是一种标记语言 (markup language)</li><li>标记语言是一套标记标签 (markup tag)</li></ul><p>超文本有两个意思</p><ol><li>因为它可以加入图片、声音、动画、多媒体等内容（*<em>超越文本限制 *</em>）</li><li>不仅如此，它还可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（*<em>超级链接文本 *</em>）。</li></ol><h2 id="HTML骨架标签"><a href="#HTML骨架标签" class="headerlink" title="HTML骨架标签"></a>HTML骨架标签</h2><p>HTML 有自己的语言语法骨架格式，要遵循它的格式来编写优雅的代码。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说明：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span>：文档类型， 声明位于文档中的最前面的位置，处于 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span> 标签之前。此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>：HTML标签，页面中最大的标签，是根标签lang="en"：页面语言，1. en 定义语言为英语、2. zh-CN 定义语言为中文 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>：文档的头部，head 标签必须设置 title <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>：字符集，字符集(Character set)是多个字符GBK。计算机要准确的处理各种字符集文字，需要进行字符编码，以便计算机能够识别和存储各种文字。UTF-8 是目前最常用的字符集编码方式，常用的字符集编码方式还有 GBK 和 GB2312。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>titile</span><span class="token punctuation">></span></span>：文档的标题,让页面拥有一个属于自己的网页标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>: 文档的主体,元素包含文档的所有内容，页面内容 基本都是放到body里面的<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>HTML 标签名、类名、标签属性和大部分属性值统一用小写,约定俗成。<br>HTML文件必须加上 DOCTYPE 声明，并统一使用 HTML5 的文档声明。</p><p>一般情况下统一使用 “UTF-8” 编码, 尽量统一写成标准的 “UTF-8”。</p><ul><li>GB2312 简单中文  包括6763个汉字  GUO BIAO</li><li>BIG5   繁体中文 港澳台等用</li><li>GBK 包含全部中文字符， 是 GB2312 的扩展，加入对繁体字的支持，兼容 GB2312</li><li>UTF-8 则基本包含全世界所有国家需要用到的字符</li></ul></blockquote><h3 id="标签："><a href="#标签：" class="headerlink" title="标签："></a>标签：</h3><p>在 HTML 页面中，带有<code>&lt; &gt;</code>符号的元素被称为 HTML 标签，如上面提到的  <code>&lt;html&gt;、&lt;head&gt;、&lt;body&gt;</code> 都是HTML 骨架结构标签。</p><h4 id="标签分类"><a href="#标签分类" class="headerlink" title="标签分类"></a>标签分类</h4><ol><li>常规元素（双标签）</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>标签名</span><span class="token punctuation">></span></span> 内容 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>标签名</span><span class="token punctuation">></span></span>   比如 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  我是文字  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>该语法中<code>&lt;标签名&gt;</code>表示该标签的作用开始，一般称为<code>开始标签（start tag）</code>，<code>&lt;/标签名&gt;</code> 表示该标签的作用结束，一般称为<code>结束标签（end tag）</code>。</p></li><li><p>和开始标签相比，结束标签只是在前面加了一个关闭符<code>/</code>。</p></li></ul><ol start="2"><li>空元素（单标签）</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>标签名</span> <span class="token punctuation">/></span></span>  比如  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>空元素 用单标签来表示， 简单点说，就是里面不需要包含内容， 只有一个开始标签不需要关闭。</li></ul><h4 id="标签关系"><a href="#标签关系" class="headerlink" title="标签关系"></a>标签关系</h4><ol><li>嵌套关系</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>并列关系</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="标签语义化"><a href="#标签语义化" class="headerlink" title="标签语义化"></a>标签语义化</h4><p>语义化是指网页结构依然组织有序，并且有良好的可读性。</p><ol><li>方便代码的阅读和维护</li><li>同时让浏览器或是网络爬虫可以很好地解析，从而更好分析其中的内容 </li><li>使用语义化标签会具有更好地搜索引擎优化 </li></ol><blockquote><p>遵循的原则：先确定语义的 HTML ，再选合适的 CSS。</p></blockquote><h2 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h2><blockquote><p>表格、表单、列表比较重要，下一章详细介绍</p></blockquote><h3 id="排版标签"><a href="#排版标签" class="headerlink" title="排版标签"></a>排版标签</h3><h4 id="标题标签-h"><a href="#标题标签-h" class="headerlink" title="标题标签 h"></a>标题标签 h</h4><p><strong>标题标签语义：</strong> 作为标题使用，并且依据重要性递减</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>   标题文本   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>   标题文本   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>   标题文本   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>   标题文本   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>   标题文本   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span>   标题文本   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/image-20200411231538037.png" alt="image-20200411231538037" style="zoom:33%;" /><h4 id="段落标签-p"><a href="#段落标签-p" class="headerlink" title="段落标签 p"></a>段落标签 p</h4><p>可以把 HTML 文档分割为若干段落。<br>是HTML文档中最常见的标签，默认情况下，文本在一个段落中会根据浏览器窗口的大小自动换行。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>  文本内容  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="水平线标签-hr"><a href="#水平线标签-hr" class="headerlink" title="水平线标签 hr"></a>水平线标签 hr</h4><p>在网页中常常看到一些水平线将段落与段落之间隔开，使得文档结构清晰，层次分明。这些水平线可以通过插入图片实现。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- hr 是单标签 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="换行标签-br"><a href="#换行标签-br" class="headerlink" title="换行标签 br"></a>换行标签 br</h4><p>在HTML中，一个段落中的文字会从左到右依次排列，直到浏览器窗口的右端，然后自动换行。如果希望某段文本强制换行显示，就需要使用换行标签。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="div-和-span-标签"><a href="#div-和-span-标签" class="headerlink" title="div 和 span 标签"></a>div 和 span 标签</h4><p>这两个都是盒子，用来装网页元素的。</p><ul><li>div 标签  用来布局的，但是现在一行只能放一个 div</li><li>span 标签  用来布局的，一行上可以放好多个 span</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h3><p>在网页中，有时需要为文字设置粗体、斜体或下划线效果，这时就需要用到HTML中的文本格式化标签，使文字以特殊的方式显示。</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/img.png" alt="img"></p><blockquote><p>b 只是加粗 strong 除了可以加粗还有强调的意思，语义更强烈。</p></blockquote><h3 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h3><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/ttt.jpg" alt=""></p><p>所谓属性就是<strong>外在特性</strong> 比如 手机的颜色 手机的尺寸 ，总结就是手机的。。</p><ul><li>手机的颜色是黑色</li><li>手机的尺寸是 8寸 </li><li>水平线的长度是 200</li><li>图片的宽度 是 300</li></ul><p>使用HTML制作网页时，如果想让HTML标签提供更多的信息，可以使用HTML标签的属性加以设置。其基本语法格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>标签名</span> <span class="token attr-name">属性1</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>属性值1<span class="token punctuation">"</span></span> <span class="token attr-name">属性2</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>属性值2<span class="token punctuation">"</span></span> <span class="token attr-name">…</span><span class="token punctuation">></span></span> 内容 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>标签名</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>手机</span> <span class="token attr-name">颜色</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>红色<span class="token punctuation">"</span></span> <span class="token attr-name">大小</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5寸<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>手机</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="图像标签img"><a href="#图像标签img" class="headerlink" title="图像标签img"></a>图像标签img</h3><p>网页中显示图像需要使用图像标签。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>图像URL<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>src</code>属性用于指定图像文件的路径和文件名，他是<code>img</code>标签的必需属性。</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/qHbHrv.tif" alt="qHbHrv"></p><p><code>border</code> 可以设置边框的高度，但是一般样式都是使用 <code>css</code>来控制的。</p><p>*<em>注意: *</em></p><ol><li>标签可以拥有多个属性，必须写在开始标签中，位于标签名后面。</li><li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开。</li><li>采取 键值对 的格式 <code>key=&quot;value&quot;</code>的格式。</li></ol><pre class="line-numbers language-html"><code class="language-html">正常的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cz.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>带有边框的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cz.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>有提示文本的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cz.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>这是个小蒲公英<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>有替换文本的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cz.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>图片不存在<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="链接标签"><a href="#链接标签" class="headerlink" title="链接标签"></a>链接标签</h3><p>单词缩写： anchor 的缩写 [ˈæŋkə(r)] 。基本解释 锚, 铁锚 的</p><p>在HTML中创建超链接非常简单，只需用标签把文字包括起来就好。</p><p>语法格式：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>跳转目标<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>目标窗口的弹出方式<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本或图像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>href</code>: 用于指定链接目标的url地址，（必须属性）当为标签应用href属性时，它就具有了超链接的功能</li><li><code>target</code>: 用于指定链接页面的打开方式，其取值有 <code>_self</code> 和<code>_blank</code>两种，其中<code>_self</code>为默认值，<code>_blank</code>为在新窗口中打开方式</li></ul><ol><li>外部链接、需要添加 <a href="http://www.baidu.com" target="_blank" rel="noopener external nofollow noreferrer">http://www.baidu.com</a></li><li>内部链接、直接链接内部页面名称即可 比如 <code>&lt; a href=&quot;index.html&quot;&gt;</code> 首页 </li><li>如果当时没有确定链接目标时，通常将链接标签的<code>href</code>属性值定义为<code>#</code>(即 href=”#”)，表示该链接暂时为一个空链接。</li><li>不仅文本可以创建文本超链接，在网页中各种网页元素，如图像、表格、音频、视频等都可以添加超链接。</li></ol><h3 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h3><p>在HTML中还有一种特殊的标签——注释标签。如果需要在HTML文档中添加一些便于阅读和理解但又不需要显示在页面中的注释文字，就需要使用注释标签。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 注释语句 --></span>     快捷键是：    ctrl + /       或者 ctrl +shift + / <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般用于简单的描述，如某些状态描述、属性描述等。</p><p>注释内容前后各一个空格字符，注释位于要注释代码的上面，单独占一行。</p><blockquote><p>推荐：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- Comment Text --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>不推荐：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- Comment Text --></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- Comment Text --></span> ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="锚点定位"><a href="#锚点定位" class="headerlink" title="锚点定位"></a>锚点定位</h3><p>通过创建锚点链接，用户能够快速定位到目标内容。</p><p>创建锚点链接分为两步：</p><pre class="line-numbers language-html"><code class="language-html">1. 使用相应的id名标注跳转目标的位置。 (找目标)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>two<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第2集<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span> 2. 使用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#id名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>链接文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>创建链接文本（被点击的）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#two<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="base-标签"><a href="#base-标签" class="headerlink" title="base 标签"></a>base 标签</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>base</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>base 可以设置整体链接的打开状态</li><li>base 写到 <code>head</code>之间</li><li>把所有的连接 都默认添加 target=”_blank”</li></ol><h3 id="预格式化文本-pre-标签"><a href="#预格式化文本-pre-标签" class="headerlink" title="预格式化文本 pre 标签"></a>预格式化文本 pre 标签</h3><p>标签可定义预格式化的文本。</p><p>被包含在此标签元素中的文本通常会保留空格和换行符。而文本也会呈现为等宽字体。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>  此例演示如何使用 pre 标签  对空行和 空格  进行控制<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字符格式"><a href="#字符格式" class="headerlink" title="字符格式"></a>字符格式</h2><p>一些特殊的符号，我们再html 里面很难或者不方便直接使用， 我们此时可以使用下面的替代代码。</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/zifu.png" alt="zifu"></p><h2 id="什么是XHTML"><a href="#什么是XHTML" class="headerlink" title="什么是XHTML"></a>什么是XHTML</h2><p>XHTML 是更严格更纯净的 HTML 代码。</p><ul><li>XHTML 指<strong>可扩展超文本标签语言</strong>（EXtensible HyperText Markup Language）。</li><li>XHTML 的目标是取代 HTML。</li><li>XHTML 与 HTML 4.01 几乎是相同的。</li><li>XHTML 是更严格更纯净的 HTML 版本。</li><li>XHTML 是作为一种 XML 应用被重新定义的 HTML。</li><li>XHTML 是一个 W3C 标准。</li></ul><h3 id="HTML和-XHTML之间有什么区别"><a href="#HTML和-XHTML之间有什么区别" class="headerlink" title="HTML和 XHTML之间有什么区别?"></a>HTML和 XHTML之间有什么区别?</h3><ul><li>XHTML 指的是可扩展超文本标记语言</li><li>XHTML 与 HTML 4.01 几乎是相同的</li><li>XHTML 是更严格更纯净的 HTML 版本</li><li>XHTML 是以 XML 应用的方式定义的 HTML</li><li>XHTML 是 2001 年 1 月发布的 W3C 推荐标准</li><li>XHTML 得到所有主流浏览器的支持</li><li>XHTML 元素是以 XML 格式编写的 HTML 元素。XHTML是严格版本的HTML，例如它要求标签必须小写，标签必须被正确关闭，标签顺序必须正确排列，对于属性都必须使用双引号等。</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表格是较为常用的一种标签，但不是用来布局，<strong>常用来显示、展示表格式数据。</strong></p><p>它可以让数据显示的非常的规整，可读性非常好。</p><p><strong>特别是后台展示数据的时候表格运用是否熟练就显得很重要</strong>，一个清爽简约的表格能够把繁杂的数据表现得很有条理，虽然 div 布局也可以做到，但是总没有表格来得方便。</p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a><strong>基本语法</strong></h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>单元格内的文字<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    ...  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>table</code>用于定义一个表格标签。 </p></li><li><p><code>tr</code>用于定义表格中的行，必须嵌套在 table标签中。</p></li><li><p><code>td</code>用于定义表格中的单元格，必须嵌套在<code>&lt;tr&gt;&lt;/tr&gt;</code>标签中。</p></li></ul><h3 id="表格属性"><a href="#表格属性" class="headerlink" title="表格属性"></a>表格属性</h3><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/tt.png" alt=""></p><h3 id="标头-th"><a href="#标头-th" class="headerlink" title="标头 th"></a>标头 th</h3><p>一般表头单元格位于表格的第一行或第一列，并且文本加粗居中。</p><p><code>th</code> 也是一个单元格   只不过和普通的 <code>td</code>单元格不一样，它会让自己里面的文字居中且加粗。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>性别<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>电话<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小王<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>女<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>110<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>小明<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>120<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        &lt;/ta<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标题-caption"><a href="#标题-caption" class="headerlink" title="标题 caption"></a>标题 caption</h3><ol><li><code>caption</code> 元素定义<strong>表格标题</strong>，通常这个标题会被居中且显示于表格之上。</li><li><code>caption</code> 标签必须紧随 table 标签之后。</li><li>这个标签只存在表格里面才有意义。</li></ol><h3 id="合并单元格"><a href="#合并单元格" class="headerlink" title="合并单元格"></a>合并单元格</h3><p>合并单元格是我们比较常用的一个操作，但是不会合并的很复杂。</p><ul><li>跨行合并：rowspan=”合并单元格的个数”      </li><li>跨列合并：colspan=”合并单元格的个数”</li></ul><p>合并的顺序我们按照   <strong>先上 后下     先左  后右</strong> 的顺序。</p><p>步骤：</p><ol><li>先确定是跨行还是跨列合并</li><li>根据 先上 后下   先左  后右的原则找到目标单元格    然后写上 合并方式 还有 要合并的单元格数量  比如 ： <code>&lt;td colspan=&quot;3&quot;&gt;   &lt;/td&gt;</code></li><li>删除多余的单元格 单元格  </li></ol><blockquote><ol><li>表格提供了HTML 中定义表格式数据的方法。</li><li>表格中由行中的单元格组成。</li><li>表格中没有列元素，列的个数取决于行的单元格个数。</li><li>表格不要纠结于外观，美化主要 CSS 来干。</li></ol></blockquote><h3 id="表格结构划分（拓展）"><a href="#表格结构划分（拓展）" class="headerlink" title="表格结构划分（拓展）"></a>表格结构划分（拓展）</h3><p>对于比较复杂的表格，表格的结构也就相对的复杂了，所以又将表格分割成三个部分：题头、正文和脚注。而这三部分分别用:thead,tbody,tfoot来标注， 这样更好的分清表格结构</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/thead.png" alt=""></p><blockquote><ol><li><code>&lt;thead&gt;&lt;/thead&gt;</code>：用于定义表格的头部。用来放标题之类的东西。<code>&lt;thead&gt;</code> 内部必须拥有 <code>&lt;tr&gt;</code> 标签！</li><li><code>&lt;tbody&gt;&lt;/tbody&gt;</code>：用于定义表格的主体。放数据本体 。</li><li><code>&lt;tfoot&gt;&lt;/tfoot&gt;</code>:放表格的脚注之类。</li><li>以上标签都是放到<code>table</code>标签中。</li></ol></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>列表就是用来布局的。 因为非常整齐和自由。</p><p>列表最大的特点就是整齐、整洁、 有序，跟表格类似，但是可组合自由度会更高。</p><h3 id="无序列表-ul"><a href="#无序列表-ul" class="headerlink" title="无序列表 ul"></a>无序列表 ul</h3><p>无序列表的各个列表项之间没有顺序级别之分，是并列的。其基本语法格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><ol><li><code>&lt;ul&gt;&lt;/ul&gt;</code>中只能嵌套<code>&lt;li&gt;&lt;/li&gt;</code>，直接在<code>&lt;ul&gt;&lt;/ul&gt;</code>标签中输入其他标签或者文字的做法是不被允许的。</li><li><code>&lt;li&gt;</code>与<code>&lt;/li&gt;</code>之间相当于一个容器，可以容纳所有元素。</li><li>无序列表会带有自己样式属性，放下那个样式，一会让<code>CSS</code>来！</li></ol></blockquote><h3 id="有序列表-ol"><a href="#有序列表-ol" class="headerlink" title="有序列表 ol"></a>有序列表 ol</h3><p>有序列表即为有排列顺序的列表，其各个列表项按照一定的顺序排列定义，有序列表的基本语法格式如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  ......<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>所有特性基本与<code>ul</code> 一致。  但是实际中比无序列表用的少很多。</p></blockquote><h3 id="自定义列表-dl"><a href="#自定义列表-dl" class="headerlink" title="自定义列表 dl"></a>自定义列表 dl</h3><p>定义列表常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。其基本语法如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>名词1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词1解释1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词1解释2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>  ...  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>名词2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词2解释1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词2解释2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>  ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h2><p>表单目的是为了收集用户信息。<br>在我们网页中， 我们也需要跟用户进行交互，收集用户资料，此时也需要表单。</p><p>在 HTML 中，一个完整的表单通常由表单控件（也称为表单元素）、提示信息和表单域 3 个部分构成。包含了具体的表单功能项，如单行文本输入框、密码输入框、复选框、提交按钮、重置按钮等。</p><p>一个表单中通常还需要包含一些说明性的文字，提示用户进行填写和操作。</p><p>相当于一个容器，用来容纳所有的表单控件和提示信息，可以通过他定义处理表单数据所用程序的 url 地址，以及数据提交到服务器的方法。如果不定义表单域，表单中的数据就无法传送到后台服务器。</p><h3 id="input-控件"><a href="#input-控件" class="headerlink" title="input 控件"></a>input 控件</h3><pre class="line-numbers language-html"><code class="language-html">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>属性值<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>你好<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p><code>input</code> 输入的意思 </p></li><li><p><code>&lt;input /</code>&gt;标签为单标签</p></li><li><p><code>type</code>属性设置不同的属性值用来指定不同的控件类型</p><ul><li><code>type = &#39;text&#39;</code>  就表示 文本框 可以做用户名， 昵称等</li><li><code>type = &#39;password&#39;</code>  就是表示密码框，用户输入的内容 是不可见的</li></ul></li><li><p><code>value</code> 默认的文本值。 有些表单想刚打开页面就默认显示几个文字，就可以通过这个<code>value</code>来设置。</p></li><li><p><code>name</code> 表单的名字， 这样，后台可以通过这个name属性找到这个表单。  页面中的表单很多，name主要作用就是用于区别不同的表单。</p><ul><li><p>如果是一组，我们必须给他们命名相同的名字 name   这样就可以多个选其中的一个啦</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>女<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p><code>checked</code>表示默认选中状态。常用于单选按钮和复选按钮。</p><pre class="line-numbers language-html"><code class="language-html">性    别:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>女<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>女 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h4 id="label-标签"><a href="#label-标签" class="headerlink" title="label 标签"></a>label 标签</h4><p><code>label</code>标签主要目的是为了提高用户体验。 为用户提高最优秀的服务。</p><p>用于绑定一个表单元素, 当点击<code>label</code>标签的时候, 被绑定的表单元素就会获得输入焦点。</p><ol><li>第一种用法就是用<code>label</code>直接包括<code>input</code>表单。</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span> 用户名： <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>usename<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol start="2"><li>第二种用法<code>for</code>属性规定<code>label</code>与哪个表单元素绑定。</li></ol><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="textarea-文本域"><a href="#textarea-文本域" class="headerlink" title="textarea 文本域"></a>textarea 文本域</h4><p>通过textarea控件可以轻松地创建多行文本输入框.</p><p>  <code>cols=&quot;每行中的字符数&quot; rows=&quot;显示的行数&quot;</code>  实际开发基本不用.</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation">=</span>10</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation">=</span>10</span><span class="token punctuation">></span></span>  文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>文本框和文本域区别</p></blockquote><table><thead><tr><th align="left">表单</th><th align="center">名称</th><th align="center">区别</th><th align="right">默认值显示</th><th align="right">用于场景</th></tr></thead><tbody><tr><td align="left">input type=”text”</td><td align="center">文本框</td><td align="center">只能显示一行文本</td><td align="right">单标签，通过value显示默认值</td><td align="right">用户名、昵称、密码等</td></tr><tr><td align="left">textarea</td><td align="center">文本域</td><td align="center">可以显示多行文本</td><td align="right">双标签，默认值写到标签中间</td><td align="right">留言板</td></tr></tbody></table><h3 id="select-下拉列表"><a href="#select-下拉列表" class="headerlink" title="select 下拉列表"></a>select 下拉列表</h3><p>如果有多个选项让用户选择，为了节约空间，我们可以使用select控件定义下拉列表。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>选项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>选项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>选项3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>  ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><code>select</code>中至少包含一对<code>option</code> </li><li>在<code>option</code>中定义<code>selected =&quot;selected&quot;</code>时，当前项即为默认选中项。</li><li>但是我们实际开发会用的比较少</li></ol><h2 id="form-表单域"><a href="#form-表单域" class="headerlink" title="form 表单域"></a>form 表单域</h2><p>在 HTML 中，<code>form</code> 标签被用于定义表单域，以实现用户信息的收集和传递，<code>form</code> 中的所有内容都会被提交给服务器。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url地址<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交方式<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>表单名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  各种表单控件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>常用属性：</strong></p><table><thead><tr><th>属性</th><th align="left">属性值</th><th>作用</th></tr></thead><tbody><tr><td>action</td><td align="left">url地址</td><td>用于指定接收并处理表单数据的服务器程序的url地址。</td></tr><tr><td>method</td><td align="left">get/post</td><td>用于设置表单数据的提交方式，其取值为get或post。</td></tr><tr><td>name</td><td align="left">名称</td><td>用于指定表单的名称，以区分同一个页面中的多个表单。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 学习笔记</title>
      <link href="/posts/e29d57f0.html"/>
      <url>/posts/e29d57f0.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><a href="https://wangchujiang.com/linux-command/" target="_blank" rel="noopener external nofollow noreferrer">常用命令速查</a></p><h1 id="Linux-是什么"><a href="#Linux-是什么" class="headerlink" title="Linux 是什么"></a>Linux 是什么</h1><blockquote><p>Linux是一个操作系统，同时是一个自由软件<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="[自由软件](https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6)的自由（free）有两个含义：第一，是可免费提供给任何用户使用；第二，是指它的源代码公开和可自由修改。所谓可自由修改是指用户可以对公开的源代码进行修改，以使自由软件更加完善，还可在对自由软件进行修改的基础上开发上层软件">[1]</span></a></sup>，是免费的、源代码开放的，编制它的目的是建立不受任何商品化软件版权制约的、全世界都能自由使用的UNIX兼容产品。</p></blockquote><p>==<strong>Linux 是一套免费使用和自由传播的类 Unix 操作系统</strong>==，是一个基于 POSIX（可移植操作系统接口） 和 UNIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。</p><p>Linux 能运行主要的 UNIX 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。</p><h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p>自由软件创始人 Richard M. Stallman 是黑客历史上最伟大的黑客，黑客中的圣者，是 GNUProject 的创始人。他于1984年起开发自由开放的操作系统 GNU<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="这个计划的目的是：创建一个自由、开放的Unix操作系统（Free Unix）">[2]</span></a></sup>（Gun is Not UNIX的首字母缩写），以此向计算机用户提供自由开放的选择。GNU 是自由软件，任何用户都可以免费复制和重新分发以及修改。</p><p>事实上，GNU 自己开发的核心称为 <a href="https://www.gnu.org/software/hurd/hurd.html" target="_blank" rel="noopener external nofollow noreferrer">hurd</a>， 是一个架构相当先进的核心。不过由于开发者在开发的过程中对 于系统的要求太过于严谨，因此推出的时程一再延后，所以才有后来 Linux 的开发！</p><p>Linux 最初是由芬兰赫尔辛基技术大学计算机系大学生 Linus Torvalds 在 1990 年底到 1991 年的几个月中，为了他自己的操作系统课程和后来的上网用途而陆续编写的，在他自己买的 Intel 386PC 上，利用 Tanenbaum 教授自行设计的微型 UNIX 操作系统 Minix<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="Minix 是谭宁邦教授于 1984 年开始编写的类 Unix 系统，之所以叫这个名字，是因为他是个 Mini 的 Unix 系统啰！@_@">[3]</span></a></sup> 作为开发平台。</p><p>Torvalds 在 Minix 的 BBS 论坛上称他以 bash, gcc 等 GNU 的工具写了一个小小的核心程序，该核心程序单纯是个玩具，不像 GNU 那么专业。 不过该核心程序可以在 Intel 的 386 机器上面运行。</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/image-20200326232220735.png" alt="image-20200326232220735"></p><p>这则新闻引起很多人的注意，他们也去托瓦兹提供的网站上下载了这个核心来安装1。 有趣的是，因为 Torvalds 放置核心的那个 FTP 网站的目录为：Linux， 从此，大家便称这个核心为Linux了。</p><p>Linux 的出现让 GNU 计划放下了心里的一块大石头，因为 GNU 一直以来就是缺乏了核心程序， 导致他们的 GNU 自 由软件只能在其他的 Unix 上面跑。既然目前有 Linux 出现了，且 Linux 也用了很多的 GNU 相关软件，所以  Stallman 认为 Linux 的全名应该称之为 GNU/Linux 呢！ 不管怎么说，Linux 实在很不错，让 GNU 也都有以 Linux 为开发测试平台的计划出现！如此一来，Linux 除了主要的核心程序外，可以在 Linux 上面运行的软件也越来越多，如果有心，就能够将一个完整的Linux操作系统搞定了！</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs/uPic/0vF7wM.png" alt=""></p><h2 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h2><p>Linux 的核心版本编号有点类似如下的样子：</p><pre class="line-numbers language-tex"><code class="language-tex">3.10.0-123.el7.x86_64主版本.次版本.释出版本-修改版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Linux 在 3.0 版本以前以版本数进行分类</p><p>3.0 以后主线版本、长期维护版本</p><h3 id="Linux-核心版本与-Linux-发布商版本"><a href="#Linux-核心版本与-Linux-发布商版本" class="headerlink" title="Linux 核心版本与 Linux 发布商版本"></a>Linux 核心版本与 Linux 发布商版本</h3><p>我们知 Linux 其实就是一个操作系统最底层的核心及其提供的核心工具。只不过现在大家都称为 Linux，严格意义来说以上所讲的其实被称为 Linux 内核，而我们常见的 Centos，Ubuntu，Debian…这些 Linux 发行版都是由商业公司将 Linux 内核，工具包，可以运行的程序组(可直接使用的软件)合在一起发行出售，这也是为什么 Linux 是 Gpl 版权为什么还有商业公司去发行这些东西，因为他们售卖的是自己的服务。</p><p>较知名的发行版有：Ubuntu、RedHat、CentOS、Debian、Fedora、SuSE、OpenSUSE、Arch Linux、SolusOS 等，国内也有 <a href="https://www.deepin.org/de/" target="_blank" rel="noopener external nofollow noreferrer">deepin</a> 这样的发行版，样式很美观，感兴趣的可以看看！</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/image-20200331173831808.png" alt="image-20200331173831808"></p><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><blockquote><p>Linux 是有桌面模式的，但是使用 Linux 当作服务器使用通常都会使用命令行模式，是没有 GUI 桌面的，可以使用终端或者远程连接工具使用。</p><p>文字模式登陆后所取得的程序被称为壳（Shell）,我所使用的主机是阿里云的一台服务器。</p></blockquote><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/Pqw5jh.png" alt="Pqw5jh"></p><p>开机会启动许多程序。Windows 叫做 <code>服务</code>（service），Linux 就叫做 <code>守护进程</code>（daemon）。</p><p>开机成功后，它会显示一个文本登录界面，这个界面就是我们经常看到的登录界面，在这个登录界面中会提示用户输入用户名，而用户输入的用户将作为参数传给 login 程序来验证用户的身份，密码是不显示的，输完回车即可！</p><p>一般来说，用户的登录方式有三种：</p><ul><li>命令行登录</li><li>ssh登录</li><li>图形界面登录</li></ul><p>最高权限账户为 root，可以操作一切！</p><p>用户可以通过指令来操作 Linux，下面是简单的介绍:</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token punctuation">[</span>root@mumu ~<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># command [-options] parameter1 parameter2 ...</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>拆解下上面这串指令，开始了解 Linux 的命令行， @ 和 [] 都是分隔符，没有实际意义存在</p></blockquote><ul><li><code>root</code>: 当前用户 </li><li><code>mumu</code>：主机名称</li><li><code>~</code>：当前所在目录</li><li><code>#</code>：代表当前登录人为超级管理员，还有另外一个 <code>$</code> 符号，代表普通用户，从这之前展示的都是系统默认带出来的，认识就行，后面的才是真正开始需要我们书写的。</li><li><code>command</code>：每行指令输入的第一部分都是指令，指令是可以执行的文案、脚本等（相当于 Windows 下的删除、添加文件和软件内的各种指令），command 是指令的名称。</li><li><code>-options</code>: 选项，通常前面会带 <code>-</code> 符号。</li><li><code>parameter1 parameter2 ...</code>： 跟在指令或选项后面的参数，可以有多个或 0 个。</li></ul><p>指令、选项、参数这几个类型中间都要<strong>加空格来区分</strong>，如有多个空格视为一个空格，一行指令输入完以后，使用 <strong><code>ENTER</code> 来执行命令</strong>，代表指令开始启动。如果一行指令太长可以输入 <code>\</code>后再输入 <code>ENTER</code> 来进行换行，而不开始执行指令，用来实现长指令的书写。<strong>Linux 是严格区分大小写</strong>的，如 <code>-a</code> 和 <code>-A</code> 是不同的意思。</p><h1 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h1><table><thead><tr><th align="left">按键(Windows Control 换为 Ctrl 即可)</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left"><code>tab</code></td><td align="left">补齐命令或或目录</td></tr><tr><td align="left"><code>control+b</code>,<code>←</code></td><td align="left">光标向左移动一个字符</td></tr><tr><td align="left"><code>control+f</code>,<code>→</code></td><td align="left">光标向右移动一个字符</td></tr><tr><td align="left"><code>control+a</code></td><td align="left">光标移动到第一位</td></tr><tr><td align="left"><code>control+e</code></td><td align="left">光标移动到最后一位</td></tr><tr><td align="left"><code>control+d</code>,<code>del</code></td><td align="left">删除光标前面的字符</td></tr><tr><td align="left"><code>control+h</code>,<code>fn+del</code></td><td align="left">删除光标后面的字符</td></tr><tr><td align="left"><code>control+u</code></td><td align="left">删除光标前面的字符串</td></tr><tr><td align="left"><code>control+k</code></td><td align="left">删除光标后面的字符串</td></tr><tr><td align="left"><code>control+p</code>,<code>↑</code></td><td align="left">向前查找历史记录</td></tr><tr><td align="left"><code>control+n</code>,<code>↓</code></td><td align="left">向后查找历史记录</td></tr></tbody></table><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><blockquote><p> <code>ls /</code></p></blockquote><p>这个命令的意思是查看==根目录下的所有内容==，<code>/</code> 代表根目录。</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/image-20200331172818023.png" alt="image-20200331172818023"></p><p>下图是根目录的树状目录结构</p><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/image-20200331214540713.png" alt="image-20200331214540713"></p><ul><li><strong>/bin</strong>：bin 是 Binary 的缩写, 这个目录存放着最经常使用的命令,是二进制文件，可执行程序，shell 命令</li><li><strong>/boot：</strong> 这里存放的是启动 Linux 时使用的一些核心文件，包括一些连接文件以及镜像文件。 </li><li><strong>/dev ：</strong> dev 是 Device (设备)的缩写, 存放的是 Linux 的外部设备，在 Linux 中访问设备的方式和访问文件的方式是相同的。在 linux 下一切皆文件、硬盘，显卡，显示器。。。</li><li><strong>/etc：</strong> 这个目录用来存放所有的系统管理所需要的配置文件和子目录。</li><li><strong>/home</strong>：用户的主目录，在 Linux 中，每个用户都有一个自己的目录，一般该目录名是以用户的账号命名的。</li><li><strong>/lib</strong>：这个目录里存放着系统最基本的动态连接共享库，其作用类似于 Windows 里的 DLL 文件。</li><li><strong>/lost+found</strong>：这个目录一般情况下是空的，当系统非法关机后，这里就存放了一些文件。</li><li><strong>/media</strong>：Linux 系统会自动识别一些设备，例如U盘、光驱等等，当识别后，Linux 会把识别的设备挂载到这个目录下。</li><li><strong>/mnt</strong>：系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在<code>/mnt/</code>上，然后进入该目录就可以查看光驱里的内容了。</li><li><strong>/opt</strong>：这是给主机额外安装软件所摆放的目录，可以用来安装第三方应用。比如你安装一个 MySQL 数据库则就可以放到这个目录下。默认是空的。</li><li><strong>/proc</strong>：这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息。</li><li><strong>/root</strong>：该目录为系统管理员，也称作超级权限者的用户主目录。</li><li><strong>/sbin</strong>：s 就是 Super User 的意思，这里存放的是系统管理员使用的系统管理程序。</li><li><strong>/srv</strong>：该目录存放一些服务启动之后需要提取的数据。</li><li><strong>/sys</strong>：这是 Linux 2.6 内核的一个很大的变化。该目录下安装了 2.6 内核中新出现的一个文件系统  sysfs 。 </li><li><strong>/tmp</strong>：这个目录是用来存放一些临时文件的。</li><li><strong>/usr</strong>：这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于 windows 下的 program files 目录。</li><li><strong>/usr/bin：</strong> 系统用户使用的应用程序。</li><li><strong>/usr/sbin：</strong> 超级用户使用的比较高级的管理程序和系统守护程序。</li><li><strong>/usr/src：</strong> 内核源代码默认的放置目录。</li><li><strong>/var</strong>：这个目录中存放着在不断扩充着的东西，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</li><li><strong>/run</strong>：是一个临时文件系统，存储系统启动以来的信息。当系统重启时，这个目录下的文件应该被删掉或清除。</li></ul><h2 id="相对路径和绝对路径"><a href="#相对路径和绝对路径" class="headerlink" title="相对路径和绝对路径"></a>相对路径和绝对路径</h2><p>在 Linux 是一个树状的命令结构，<code>/</code> 代表根目录。其他的目录可以通过挂载添加到树中，解除挂载可以移除。</p><ul><li>绝对路径：由根目录写起，例如 <code>/usr/local</code></li><li>相对路径：从当前目录开始表示，例如现在在 <code>/usr</code> 目录下，就可以直接访问 <code>local</code> 目录，不用从根目录起开始访问</li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li><p><strong>ls</strong>: 显示目标列表，是使用率较高的命令。ls 命令的输出信息可以进行彩色加亮显示，以分区不同类型的文件。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 常用命令</span>$ <span class="token function">ls</span> -l    <span class="token comment" spellcheck="true"># 列出当前目录可见文件详细信息</span>$ <span class="token function">ls</span> -hl   <span class="token comment" spellcheck="true"># 列出详细信息并以可读大小显示文件大小</span>$ <span class="token function">ls</span> -al   <span class="token comment" spellcheck="true"># 列出所有文件（包括隐藏）的详细信息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>cd</strong>：切换工作目录，切换工作目录至<code>dir</code>。其中<code>dir</code>的表示法可以是绝对路径或相对路径。</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">cd</span>    <span class="token comment" spellcheck="true"># 进入用户主目录；</span>$ <span class="token function">cd</span> /  <span class="token comment" spellcheck="true"># 进入根目录</span>$ <span class="token function">cd</span> ~  <span class="token comment" spellcheck="true"># 进入用户主目录；</span>$ <span class="token function">cd</span> <span class="token punctuation">..</span>  <span class="token comment" spellcheck="true"># 返回上级目录（若当前目录为“/“，则执行完后还在“/"；".."为上级目录的意思）；</span>$ <span class="token function">cd</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>  <span class="token comment" spellcheck="true"># 返回上两级目录；</span>$ <span class="token function">cd</span> <span class="token operator">!</span>$  <span class="token comment" spellcheck="true"># 把上个命令的参数作为cd参数使用。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>pwd</strong>：显示目前的目录</p><pre class="line-numbers language-bash"><code class="language-bash">$ <span class="token function">pwd</span> -P    <span class="token comment" spellcheck="true"># 如果是链接，显示真实地址</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>mkdir</strong>：创建一个新的目录，该命令创建由 dirname 命名的目录。如果在目录名的前面没有加任何路径名，则在当前目录下创建由 dirname 指定的目录；如果给出了一个已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所在目录下的文件没有重名。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 在目录 /usr/meng 下建立子目录 test，并且只有文件主有读、写和执行权限，其他人无权访问</span><span class="token function">mkdir</span> -m 700 /usr/meng/test<span class="token comment" spellcheck="true"># 在当前目录中建立 bin 和 bin 下的 os_1 目录，权限设置为文件主可读、写、执行，同组用户可读和执行，其他用户无权访问</span><span class="token function">mkdir</span> -p-m 750 bin/os_1 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>rmdir</strong>：用来删除空目录。当目录不再被使用时，或者磁盘空间已到达使用限定值，就需要删除失去使用价值的目录。利用<code>rmdir</code>命令可以从一个目录中删除一个或多个空的子目录。该命令从一个目录中删除一个或多个子目录，其中 dirname 表示目录名。如果 dirname 中没有指定路径，则删除当前目录下由 dirname 指定的目录；如 dirname 中包含路径，则删除指定位置的目录。删除目录时，必须具有对其父目录的写权限.</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">rmdir</span> www <span class="token comment" spellcheck="true"># 删除工作目录下的 www 文件夹</span><span class="token function">rmdir</span> -p www/Test <span class="token comment" spellcheck="true"># 删除工作目录下的 Test 文件夹，Test 删除后，www 目录成为空目录，就把 www 也删除。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>cp</strong>: 复制文件或目录</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 将目录 /usr/men 下的所有文件及其子目录复制到目录 /usr/zh中</span><span class="token function">cp</span> -r /usr/men /usr/zh<span class="token comment" spellcheck="true"># 将文件 file 复制到目录 /usr/men/tmp 下，并改名为 file1</span><span class="token function">cp</span> <span class="token function">file</span> /usr/men/tmp/file1<span class="token comment" spellcheck="true"># 复制目录 aaa 下所有到 /bbb 目录下，这时如果 /bbb 目录下有和 aaa 同名的文件，需要按 Y 来确认并且会略过 aaa 目录下的子目录。</span><span class="token function">cp</span> aaa/* /bbb<span class="token comment" spellcheck="true"># 这次依然需要按Y来确认操作，但是没有忽略子目录。</span><span class="token function">cp</span> -r aaa/* /bbb<span class="token comment" spellcheck="true"># 依然需要按Y来确认操作，并且把 aaa 目录以及子目录和文件属性也传递到了 /bbb。</span><span class="token function">cp</span> -r -a aaa/* /bbb<span class="token comment" spellcheck="true"># 成功，没有提示按 Y、传递了目录属性、没有略过目录。</span><span class="token function">cp</span> -r -a aaa/* /bbb<span class="token comment" spellcheck="true"># 将当前目录下所有文件，复制到当前目录的兄弟目录 backup 文件夹中</span><span class="token function">cp</span> -rfb ./* <span class="token punctuation">..</span>/backup<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>rm</strong>: 删除文件或目录</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># rm -r [目录名称] -r 表示递归地删除目录下的所有文件和目录。 -f 表示强制删除</span><span class="token function">rm</span> -rf testdir<span class="token function">rm</span> -r testdir<span class="token comment" spellcheck="true"># -i 表示删除操作前有确认提示</span><span class="token function">rm</span> -r -i <span class="token punctuation">[</span>文件/目录<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 显示当前删除操作的详情</span><span class="token function">rm</span> -v <span class="token punctuation">[</span>文件/目录<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>mv</strong>: 移动文件与目录，或修改文件与目录的名称</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 将目录 /usr/men 中的所有文件移到当前目录（用 . 表示）中</span><span class="token function">mv</span> /usr/men/* <span class="token keyword">.</span><span class="token comment" spellcheck="true"># 移动文件</span><span class="token function">mv</span> file_1.txt /home/office/<span class="token comment" spellcheck="true"># 移动多个文件, * 代表任意字符</span><span class="token function">mv</span> file_2.txt file_3.txt file_4.txt /home/office/<span class="token function">mv</span> *.txt /home/office/<span class="token comment" spellcheck="true"># 将文件 file_1.txt 改名为 file_2.txt</span><span class="token function">mv</span> file_1.txt file_2.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h1><h2 id="使用者和群组"><a href="#使用者和群组" class="headerlink" title="使用者和群组"></a>使用者和群组</h2><p>Linux 是多用户多任务的系统，可能会有多个人来访问。</p><ul><li><p>Linux 有文件所有者的角色，就是谁创建的这个文件谁就是这个文件的所有者，可以称之为属主。</p></li><li><p>为了方便多用户协作，还有群组的概念，即当前用户归属于哪个组，可以用组来简单的设置权限，比如我相同组的成员可以访问或执行，一个用户可以同时是多个群组的成员，群组可以成为属组。</p></li><li><p>还有其他用户和当前用户及其属组没有关系就可以称为其他用户。</p></li><li><p>Linux 有一个超级管理员 <code>root</code>，它既是一个用户也是一个单独的组，可以访问所有文件而不受权限影响。</p></li></ul><p>有了这些划分，可以是 Linux 在协作使用上及其方便。</p><h2 id="权限介绍"><a href="#权限介绍" class="headerlink" title="权限介绍"></a>权限介绍</h2><blockquote><p>可以使用 <code>ls -l</code> 查看目录的详细信息,<a href="https://viewer.edrawsoft.com/public/s/dedff059323912" target="_blank" rel="noopener external nofollow noreferrer">在线图片</a></p></blockquote><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/mumudm/blogimgs@master/uPic/image-20200401233749627.png" alt="image-20200401233749627"></p><pre class="line-numbers language-bash"><code class="language-bash">lrwxrwxrwx   1     root         root     7         Oct 29  2018     bin -<span class="token operator">></span> usr/bin<span class="token punctuation">[</span>1<span class="token punctuation">]</span>                    <span class="token punctuation">[</span>2<span class="token punctuation">]</span> <span class="token punctuation">[</span>3<span class="token punctuation">]</span>            <span class="token punctuation">[</span>4<span class="token punctuation">]</span>            <span class="token punctuation">[</span>5<span class="token punctuation">]</span>        <span class="token punctuation">[</span>6<span class="token punctuation">]</span>                        <span class="token punctuation">[</span>7<span class="token punctuation">]</span><span class="token punctuation">[</span> 权限    <span class="token punctuation">]</span><span class="token punctuation">[</span>链接<span class="token punctuation">]</span><span class="token punctuation">[</span>拥有者<span class="token punctuation">]</span><span class="token punctuation">[</span>群组<span class="token punctuation">]</span> <span class="token punctuation">[</span>文件大小<span class="token punctuation">]</span><span class="token punctuation">[</span>  修改日期  <span class="token punctuation">]</span> <span class="token punctuation">[</span>    文件名    <span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>[1]第一个字母 <code>l</code> 代表文件的类型，一下这些为常见的类型：<ul><li>当为 <code>d</code> 则是目录</li><li>当为 <code>-</code> 则是文件；</li><li>若是 <code>l</code> 则表示为链接文档 ( link file )；</li><li>若是 <code>b</code> 则表示为装置文件里面的可供储存的接口设备 ( 可随机存取装置 )；</li><li>若是 <code>c</code> 则表示为装置文件里面的串行端口设备，例如键盘、鼠标 ( 一次性读取装置 )。</li><li>接下来的字符中，以三个为一组，且均为<code>rwx</code> 的三个参数的组合。其中， <code>r</code>代表可读（read）、 <code>w</code> 代表可写（write）、 <code>x</code> 代表可执行（execute）。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 <code>-</code> 。<ul><li>第一组为属主的权限</li><li>第二组为属组的权限</li><li>第三组为其他用户的权限</li></ul></li></ul></li><li>[2]代表当前有多少文件名链接到此节点</li><li>[3]属主</li><li>[4]属组</li><li>[5]文件大小，默认单位是 Bytes。</li><li>[6]修改时间，如果修改时间距离现在时间过长就会显示月日年，否则就会显示月日小时分钟。</li><li>[7]文件名称</li></ul><h2 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h2><ul><li><p><code>chgrp</code> ：更改文件属组 </p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># -R：递归更改文件属组，在更改某个目录文件的属组时，如果加上 -R 的参数，那么该目录下的所有文件的属组都会更改。</span><span class="token function">chgrp</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> 属组名 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>chown</code> ：更改文件属主，也可以同时更改文件属组</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">chown</span> <span class="token punctuation">[</span>–R<span class="token punctuation">]</span> 属主名 文件名<span class="token function">chown</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> 属主名：属组名 文件名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><code>chmod</code> ：更改文件的权限</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># xyz : 就是下一行提到的数字类型的权限属性，为 rwx 属性数值的相加。</span><span class="token function">chmod</span> <span class="token punctuation">[</span>-R<span class="token punctuation">]</span> xyz 文件或目录<span class="token comment" spellcheck="true"># Linux 文件属性有两种设置方法，一种是数字，一种是符号。</span><span class="token comment" spellcheck="true"># Linux 文件的基本权限就有九个，分别是 owner/group/others 三种身份各有自己的read/write/execute权限。</span><span class="token comment" spellcheck="true"># 文件的权限字符为：『-rwxrwxrwx』， 这九个权限是三个三个一组的！</span><span class="token comment" spellcheck="true"># 可以使用数字来代表各个权限，各权限的分数对照表如下</span><span class="token comment" spellcheck="true"># r:4     w:2         x:1</span><span class="token comment" spellcheck="true"># 这三个数字任意相加只都是不一样的，所以可以使用它来设置权限更为简洁，如果没有任何权限，可以设置为 0</span><span class="token comment" spellcheck="true"># 最常用的命令，给所有用户设置当前文件所有权限</span><span class="token comment" spellcheck="true"># 其中第一个 7 代表属主权限，第二个是属组权限，第三个是其他用户权限</span><span class="token comment" spellcheck="true"># 7 = r + w + x ,就是 7 = 4 + 2 + 1</span><span class="token function">chmod</span> 777 文件或目录<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h1 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h1><p>底下这些命令都可以查看文件，但是我使用最多的也就是 <code>less</code> 和 <code>tail</code>，这两个也是功能比较丰富的，详细介绍下。</p><ul><li><code>cat</code> 由第一行开始显示文件内容</li><li><code>tac</code> 从最后一行开始显示，可以看出 <code>tac</code> 是 <code>cat</code> 的倒着写！</li><li><code>nl</code>  显示的时候，顺道输出行号！</li><li><code>more</code> 一页一页的显示文件内容</li><li><code>less</code> 与 <code>more</code> 类似，但是比 <code>more</code> 更好的是，他可以往前翻页！<ul><li>空格键  ：向下翻动一页；</li><li>[pagedown]：向下翻动一页；</li><li>[pageup] ：向上翻动一页；</li><li>/字串  ：向下搜寻『字串』的功能；</li><li>?字串  ：向上搜寻『字串』的功能；</li><li>n   ：重复前一个搜寻 (与 / 或 ? 有关！)</li><li>N   ：反向的重复前一个搜寻 (与 / 或 ? 有关！)</li><li>q   ：离开 less 这个程序；</li></ul></li><li><code>head</code> 只看头几行</li><li><code>tail</code> 用于显示文件中的最后几行。tail命令默认在屏幕上显示指定文件的末尾10行。使用 <code>-f</code>参数可以追加文件的最新内容，常用来监视文件的变化和日志的追踪。</li></ul><h3 id="软链接和硬链接"><a href="#软链接和硬链接" class="headerlink" title="软链接和硬链接"></a>软链接和硬链接</h3><ul><li><p>软链接</p><p>相当于 Windows 下的快捷方式，如果文件删除了，访问软链接会提示你不存在，请删除此链接。</p></li><li><p>硬链接</p><p>硬链接是复制了一份磁盘的拷贝信息创建了一个连接，和原文件指向的都是同一个文件。硬链接不占用实际空间。</p></li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 使用 ln 命令创建链接， -s 代表软链接，不带 -s 为硬链接。目录只能创建软链接！</span><span class="token function">ln</span> -s 文件 链接名称 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;"><a href="https://zh.wikipedia.org/wiki/%E8%87%AA%E7%94%B1%E8%BD%AF%E4%BB%B6" target="_blank" rel="noopener external nofollow noreferrer">自由软件</a>的自由（free）有两个含义：第一，是可免费提供给任何用户使用；第二，是指它的源代码公开和可自由修改。所谓可自由修改是指用户可以对公开的源代码进行修改，以使自由软件更加完善，还可在对自由软件进行修改的基础上开发上层软件<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">这个计划的目的是：创建一个自由、开放的Unix操作系统（Free Unix）<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Minix 是谭宁邦教授于 1984 年开始编写的类 Unix 系统，之所以叫这个名字，是因为他是个 Mini 的 Unix 系统啰！@_@<a href="#fnref:3" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringMVC 上传文件 MultipartFile 转为 File</title>
      <link href="/posts/34671.html"/>
      <url>/posts/34671.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>在使用 SpringMVC 上传文件时，接收到的文件格式为 <code>MultipartFile</code>，但是在很多场景下使用都需要<code>File</code>格式的文件，记录下以便日后使用。</p><blockquote><p>以下<code>mFile</code>为<code>MultipartFile</code>文件<br>此方法会在本地产生临时文件，使用完毕需要删除<br>在网上搜索未发现可直接使用的不产生临时文件的方法，查到几个本地测试皆无法通过，如哪位有不产生临时文件的方法，请多多指教👍</p></blockquote><h2 id="MultipartFile-转为-File"><a href="#MultipartFile-转为-File" class="headerlink" title="MultipartFile 转为 File"></a>MultipartFile 转为 File</h2><pre class="line-numbers language-java"><code class="language-java">File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>mFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>FileUtils<span class="token punctuation">.</span><span class="token function">copyInputStreamToFile</span><span class="token punctuation">(</span>mFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 会在本地产生临时文件，用完后需要删除</span><span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    file<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="MultipartFile-获取-Base64-编码"><a href="#MultipartFile-获取-Base64-编码" class="headerlink" title="MultipartFile 获取 Base64 编码"></a>MultipartFile 获取 Base64 编码</h2><pre class="line-numbers language-java"><code class="language-java">File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>mFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>FileUtils<span class="token punctuation">.</span><span class="token function">copyInputStreamToFile</span><span class="token punctuation">(</span>mFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">(</span>FileInputStream fis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> file<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    fis<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>Base64<span class="token punctuation">.</span><span class="token function">encodeBase64</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">,</span> StandardCharsets<span class="token punctuation">.</span>ISO_8859_1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        file<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringMVC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown 语法测试</title>
      <link href="/posts/45641.html"/>
      <url>/posts/45641.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="markdown-mermaid-语法"><a href="#markdown-mermaid-语法" class="headerlink" title="markdown mermaid 语法"></a>markdown mermaid 语法</h1><pre class="mermaid">graph TDA[模块A] -->|A1| B(模块B)B --> C{判断条件C}C -->|条件C1| D[模块D]C -->|条件C2| E[模块E]C -->|条件C3| F[模块F]</pre><pre class="mermaid">gantttitle 甘特图dateFormat  YYYY-MM-DDsection 项目A任务1           :a1, 2018-06-06, 30d任务2     :after a1  , 20dsection 项目B任务3      :2018-06-12  , 12d任务4      : 24d</pre><p>$e^{i\pi} + 1 = 0$</p><p>$$e^{i\pi} + 1 = 0$$</p><pre class="mermaid">graph TDA[模块A] -->|A1| B(模块B)B --> C{判断条件C}C -->|条件C1| D[模块D]C -->|条件C2| E[模块E]C -->|条件C3| F[模块F]</pre><pre class="mermaid">graph TD;    A-->B;    A-->C;    B-->D;    C-->D;</pre><pre class="mermaid">sequenceDiagram    participant Alice    participant Bob    Alice->>John: Hello John, how are you?    loop Healthcheck        John->>John: Fight against hypochondria    end    Note right of John: Rational thoughts <br/>prevail!    John-->>Alice: Great!    John->>Bob: How about you?    Bob-->>John: Jolly good!</pre><pre class="mermaid">classDiagramClass01 <|-- AveryLongClass : CoolClass03 *-- Class04Class05 o-- Class06Class07 .. Class08Class09 --> C2 : Where am i?Class09 --* C3Class09 --|> Class07Class07 : equals()Class07 : Object[] elementDataClass01 : size()Class01 : int chimpClass01 : int gorillaClass08 <--> C2: Cool label</pre><pre class="mermaid">gitGraph:options{    "nodeSpacing": 150,    "nodeRadius": 10}endcommitbranch newbranchcheckout newbranchcommitcommitcheckout mastercommitcommitmerge newbranch</pre><pre class="mermaid">pie    title Key elements in Product X    "Calcium" : 42.96    "Potassium" : 50.05    "Magnesium" : 10.01    "Iron" :  5</pre><pre class="mermaid">stateDiagramstate fork_state <<fork>>[*] --> fork_statefork_state --> State2fork_state --> State3state join_state <<join>>State2 --> join_stateState3 --> join_statejoin_state --> State4State4 --> [*]</pre><hr><p>basic footnote<sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="basic footnote content  ">[1]</span></a></sup><br>here is an inline footnote<sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="footnote  ">[2]</span></a></sup><br>and another one<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="paragraph  ">[3]</span></a></sup><br>and another one<sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top hint--error hint--medium hint--rounded hint--bounce" aria-label="footnote content with some [markdown](https://en.wikipedia.org/wiki/Markdown)">[4]</span></a></sup>  </p><div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">basic footnote content<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">inline footnote<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">footnote<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">paragraph<a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">footnote content with some <a href="https://en.wikipedia.org/wiki/Markdown" target="_blank" rel="noopener external nofollow noreferrer">markdown</a><a href="#fnref:4" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown 数学公式</title>
      <link href="/posts/6702.html"/>
      <url>/posts/6702.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h1><h1 id="Markdown-数学公式语法"><a href="#Markdown-数学公式语法" class="headerlink" title="Markdown 数学公式语法"></a>Markdown 数学公式语法</h1><h2 id="行内与独行"><a href="#行内与独行" class="headerlink" title="行内与独行"></a>行内与独行</h2><ol><li>行内公式：将公式插入到本行内，符号：<code>$公式内容$</code>，如：$xyz$</li><li>独行公式：将公式插入到新的一行内，并且居中，符号：<code>$$公式内容$$</code>，如：$$xyz$$</li></ol><h2 id="上标、下标与组合"><a href="#上标、下标与组合" class="headerlink" title="上标、下标与组合"></a>上标、下标与组合</h2><ol><li>上标符号，符号：<code>^</code>，如：$x^4$</li><li>下标符号，符号：<code>_</code>，如：$x_1$</li><li>组合符号，符号：<code>{}</code>，如：${16}<em>{8}O{2+}</em>{2}$</li></ol><h2 id="汉字、字体与格式"><a href="#汉字、字体与格式" class="headerlink" title="汉字、字体与格式"></a>汉字、字体与格式</h2><ol><li>汉字形式，符号：<code>\mbox{}</code>，如：$V_{mbox{初始}}$</li><li>字体控制，符号：<code>\displaystyle</code>，如：$\displaystyle \frac{x+y}{y+z}$</li><li>下划线符号，符号：<code>\underline</code>，如：$\underline{x+y}$</li><li>标签，符号<code>\tag{数字}</code>，如：$tag{1}$</li><li>上大括号，符号：<code>\overbrace{算式}</code>，如：$\overbrace{a+b+c+d}^{2.0}$</li><li>下大括号，符号：<code>\underbrace{算式}</code>，如：$a+\underbrace{b+c}_{1.0}+d$</li><li>上位符号，符号：<code>\stacrel{上位符号}{基位符号}</code>，如：$\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}$</li></ol><h2 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h2><ol><li>两个 quad 空格，符号：<code>\qquad</code>，如：$x \qquad y$</li><li>quad 空格，符号：<code>\quad</code>，如：$x \quad y$</li><li>大空格，符号<code>\</code>，如：$x \ y$</li><li>中空格，符号<code>\:</code>，如：$x : y$</li><li>小空格，符号<code>\,</code>，如：$x , y$</li><li>没有空格，符号 ``，如：$xy$</li><li>紧贴，符号<code>\!</code>，如：$x ! y$</li></ol><h2 id="定界符与组合"><a href="#定界符与组合" class="headerlink" title="定界符与组合"></a>定界符与组合</h2><ol><li>括号，符号：<code>（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)</code>，如：$（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)$</li><li>中括号，符号：<code>[]</code>，如：$[x+y]$</li><li>大括号，符号：<code>\{ \}</code>，如：${x+y}$</li><li>自适应括号，符号：<code>\left \right</code>，如：$\left(x\right)$，$\left(x{yz}\right)$</li><li>组合公式，符号：<code>{上位公式 \choose 下位公式}</code>，如：${n+1 \choose k}={n \choose k}+{n \choose k-1}$</li><li>组合公式，符号：<code>{上位公式 \atop 下位公式}</code>，如：$\sum_{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A_{k_0}A_{k_1}\cdots$</li></ol><h2 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h2><ol><li>加法运算，符号：<code>+</code>，如：$x+y=z$</li><li>减法运算，符号：<code>-</code>，如：$x-y=z$</li><li>加减运算，符号：<code>\pm</code>，如：$x \pm y=z$</li><li>减甲运算，符号：<code>\mp</code>，如：$x \mp y=z$</li><li>乘法运算，符号：<code>\times</code>，如：$x \times y=z$</li><li>点乘运算，符号：<code>\cdot</code>，如：$x \cdot y=z$</li><li>星乘运算，符号：<code>\ast</code>，如：$x \ast y=z$</li><li>除法运算，符号：<code>\div</code>，如：$x \div y=z$</li><li>斜法运算，符号：<code>/</code>，如：$x/y=z$</li><li>分式表示，符号：<code>\frac{分子}{分母}</code>，如：$\frac{x+y}{y+z}$</li><li>分式表示，符号：<code>{分子} \voer {分母}</code>，如：${x+y} \over {y+z}$</li><li>绝对值表示，符号：<code>||</code>，如：$|x+y|$</li></ol><h2 id="高级运算"><a href="#高级运算" class="headerlink" title="高级运算"></a>高级运算</h2><ol><li>平均数运算，符号：<code>\overline{算式}</code>，如：$\overline{xyz}$</li><li>开二次方运算，符号：<code>\sqrt</code>，如：$\sqrt x$</li><li>开方运算，符号：<code>\sqrt[开方数]{被开方数}</code>，如：$\sqrt[3]{x+y}$</li><li>对数运算，符号：<code>\log</code>，如：$\log(x)$</li><li>极限运算，符号：<code>\lim</code>，如：$\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>极限运算，符号：<code>\displaystyle \lim</code>，如：$\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>求和运算，符号：<code>\sum</code>，如：$\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>求和运算，符号：<code>\displaystyle \sum</code>，如：$\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>积分运算，符号：<code>\int</code>，如：$\int^{\infty}_{0}{xdx}$</li><li>积分运算，符号：<code>\displaystyle \int</code>，如：$\displaystyle \int^{\infty}_{0}{xdx}$</li><li>微分运算，符号：<code>\partial</code>，如：$\frac{\partial x}{\partial y}$</li><li>矩阵表示，符号：<code>\begin{matrix} \end{matrix}</code>，如：$\left[\begin{matrix} 1 &amp;2 &amp;\cdots &amp;4\ 5 &amp;6 &amp;\cdots &amp;8\vdots &amp;\vdots &amp;\ddots &amp;\vdots\ 13 &amp;14 &amp;\cdots &amp;16\end{matrix} \right]$</li></ol><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><ol><li>等于运算，符号：<code>=</code>，如：$x+y=z$</li><li>大于运算，符号：<code>&gt;</code>，如：$x+y&gt;z$</li><li>小于运算，符号：<code>&lt;</code>，如：$x+y \le z$</li><li>大于等于运算，符号：<code>\geq</code>，如：$x+y \geq z$</li><li>小于等于运算，符号：<code>\leq</code>，如：$x+y \leq z$</li><li>不等于运算，符号：<code>\neq</code>，如：$x+y \neq z$</li><li>不大于等于运算，符号：<code>\ngeq</code>，如：$x+y \ngeq z$</li><li>不大于等于运算，符号：<code>\not\geq</code>，如：$x+y \not\geq z$</li><li>不小于等于运算，符号：<code>\nleq</code>，如：$x+y \nleq z$</li><li>不小于等于运算，符号：<code>\not\leq</code>，如：$x+y \not\leq z$</li><li>约等于运算，符号：<code>\approx</code>，如：$x+y \approx z$</li><li>恒定等于运算，符号：<code>\equiv</code>，如：$x+y \equiv z$</li></ol><h2 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h2><ol><li>属于运算，符号：<code>\in</code>，如：$x \in y$</li><li>不属于运算，符号：<code>\notin</code>，如：$x \notin y$</li><li>不属于运算，符号：<code>\not\in</code>，如：$x \not\in y$</li><li>子集运算，符号：<code>\subset</code>，如：$x \subset y$</li><li>子集运算，符号：<code>\supset</code>，如：$x \supset y$</li><li>真子集运算，符号：<code>\subseteq</code>，如：$x \subseteq y$</li><li>非真子集运算，符号：<code>\subsetneq</code>，如：$x \subsetneq y$</li><li>真子集运算，符号：<code>\supseteq</code>，如：$x \supseteq y$</li><li>非真子集运算，符号：<code>\supsetneq</code>，如：$x \supsetneq y$</li><li>非子集运算，符号：<code>\not\subset</code>，如：$x \not\subset y$</li><li>非子集运算，符号：<code>\not\supset</code>，如：$x \not\supset y$</li><li>并集运算，符号：<code>\cup</code>，如：$x \cup y$</li><li>交集运算，符号：<code>\cap</code>，如：$x \cap y$</li><li>差集运算，符号：<code>\setminus</code>，如：$x \setminus y$</li><li>同或运算，符号：<code>\bigodot</code>，如：$x \bigodot y$</li><li>同与运算，符号：<code>\bigotimes</code>，如：$x \bigotimes y$</li><li>实数集合，符号：<code>\mathbb{R}</code>，如：$<code>\mathbb{R}</code>$</li><li>自然数集合，符号：<code>\mathbb{Z}</code>，如：$<code>\mathbb{Z}</code>$</li><li>空集，符号：<code>\emptyset</code>，如：$\emptyset$</li></ol><h2 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h2><ol><li>无穷，符号：<code>\infty</code>，如：$\infty$</li><li>虚数，符号：<code>\imath</code>，如：$\imath$</li><li>虚数，符号：<code>\jmath</code>，如：$\jmath$</li><li>数学符号，符号<code>\hat{a}</code>，如：$\hat{a}$</li><li>数学符号，符号<code>\check{a}</code>，如：$\check{a}$</li><li>数学符号，符号<code>\breve{a}</code>，如：$\breve{a}$</li><li>数学符号，符号<code>\tilde{a}</code>，如：$\tilde{a}$</li><li>数学符号，符号<code>\bar{a}</code>，如：$\bar{a}$</li><li>矢量符号，符号<code>\vec{a}</code>，如：$\vec{a}$</li><li>数学符号，符号<code>\acute{a}</code>，如：$\acute{a}$</li><li>数学符号，符号<code>\grave{a}</code>，如：$\grave{a}$</li><li>数学符号，符号<code>\mathring{a}</code>，如：$\mathring{a}$</li><li>一阶导数符号，符号<code>\dot{a}</code>，如：$\dot{a}$</li><li>二阶导数符号，符号<code>\ddot{a}</code>，如：$\ddot{a}$</li><li>上箭头，符号：<code>\uparrow</code>，如：$\uparrow$</li><li>上箭头，符号：<code>\Uparrow</code>，如：$\Uparrow$</li><li>下箭头，符号：<code>\downarrow</code>，如：$\downarrow$</li><li>下箭头，符号：<code>\Downarrow</code>，如：$\Downarrow$</li><li>左箭头，符号：<code>\leftarrow</code>，如：$\leftarrow$</li><li>左箭头，符号：<code>\Leftarrow</code>，如：$\Leftarrow$</li><li>右箭头，符号：<code>\rightarrow</code>，如：$\rightarrow$</li><li>右箭头，符号：<code>\Rightarrow</code>，如：$\Rightarrow$</li><li>底端对齐的省略号，符号：<code>\ldots</code>，如：$1,2,\ldots,n$</li><li>中线对齐的省略号，符号：<code>\cdots</code>，如：$x_1^2 + x_2^2 + \cdots + x_n^2$</li><li>竖直对齐的省略号，符号：<code>\vdots</code>，如：$\vdots$</li><li>斜对齐的省略号，符号：<code>\ddots</code>，如：$\ddots$</li></ol><h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><table><thead><tr><th>字母</th><th>实现</th><th>字母</th><th>实现</th></tr></thead><tbody><tr><td>A</td><td><code>A</code></td><td>α</td><td><code>\alhpa</code></td></tr><tr><td>B</td><td><code>B</code></td><td>β</td><td><code>\beta</code></td></tr><tr><td>Γ</td><td><code>\Gamma</code></td><td>γ</td><td><code>\gamma</code></td></tr><tr><td>Δ</td><td><code>\Delta</code></td><td>δ</td><td><code>\delta</code></td></tr><tr><td>E</td><td><code>E</code></td><td>ϵ</td><td><code>\epsilon</code></td></tr><tr><td>Z</td><td><code>Z</code></td><td>ζ</td><td><code>\zeta</code></td></tr><tr><td>H</td><td><code>H</code></td><td>η</td><td><code>\eta</code></td></tr><tr><td>Θ</td><td><code>\Theta</code></td><td>θ</td><td><code>\theta</code></td></tr><tr><td>I</td><td><code>I</code></td><td>ι</td><td><code>\iota</code></td></tr><tr><td>K</td><td><code>K</code></td><td>κ</td><td><code>\kappa</code></td></tr><tr><td>Λ</td><td><code>\Lambda</code></td><td>λ</td><td><code>\lambda</code></td></tr><tr><td>M</td><td><code>M</code></td><td>μ</td><td><code>\mu</code></td></tr><tr><td>N</td><td><code>N</code></td><td>ν</td><td><code>\nu</code></td></tr><tr><td>Ξ</td><td><code>\Xi</code></td><td>ξ</td><td><code>\xi</code></td></tr><tr><td>O</td><td><code>O</code></td><td>ο</td><td><code>\omicron</code></td></tr><tr><td>Π</td><td><code>\Pi</code></td><td>π</td><td><code>\pi</code></td></tr><tr><td>P</td><td><code>P</code></td><td>ρ</td><td><code>\rho</code></td></tr><tr><td>Σ</td><td><code>\Sigma</code></td><td>σ</td><td><code>\sigma</code></td></tr><tr><td>T</td><td><code>T</code></td><td>τ</td><td><code>\tau</code></td></tr><tr><td>Υ</td><td><code>\Upsilon</code></td><td>υ</td><td><code>\upsilon</code></td></tr><tr><td>Φ</td><td><code>\Phi</code></td><td>ϕ</td><td><code>\phi</code></td></tr><tr><td>X</td><td><code>X</code></td><td>χ</td><td><code>\chi</code></td></tr><tr><td>Ψ</td><td><code>\Psi</code></td><td>ψ</td><td><code>\psi</code></td></tr><tr><td>Ω</td><td><code>\Omega</code></td><td>ω</td><td><code>\omega</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac 环境配置</title>
      <link href="/posts/22258.html"/>
      <url>/posts/22258.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote><p>今天重装了 Mac 系统，记录下环境配置及常用软件</p></blockquote><h2 id="日常软件"><a href="#日常软件" class="headerlink" title="日常软件"></a>日常软件</h2><ul><li><code>微信</code></li><li><code>QQ</code></li><li><code>网易邮箱大师</code></li><li><code>搜狗输入法</code></li><li><code>网易云音乐</code></li><li><code>uPic</code> 图床管理工具</li><li><code>印象笔记</code></li><li><code>ltsycl</code> 菜单栏日历管理</li><li><code>Telegram</code> 电报</li><li><code>shadowsocksX-NG-R8</code> 科学上网</li><li><code>office 365</code></li><li><code>1Password7</code> 密码管理工具</li><li><code>keka</code> 压缩包工具</li><li><code>Xnip</code> 截图工具</li><li><code>Logi Options</code> 罗技鼠标管理工具</li><li><code>Bartender3</code> 菜单栏管理工具</li><li><code>Alfred</code> 快速启动工具，剪贴板历史，workflow，快速搜索</li><li><code>PDF Expert</code> PDF 阅读工具</li><li><code>CleanMyMac X</code> 卸载工具</li><li><code>Google Chrome</code> 浏览器</li><li><code>SwitchHost</code> host 管理工具</li></ul>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac 配置</title>
      <link href="/posts/47584.html"/>
      <url>/posts/47584.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h3><ol><li><p>可安装任何来源的软件 <code>sudo spctl --master-disable</code></p></li><li><p>Launchpad 图标默认排，苹果自带应用显示在第一屏，自己安装应用显示在第二屏<br><code>defaults write com.apple.dock ResetLaunchPad -bool true; killall Dock</code></p></li><li><p>Launchpad 每行每列展示数量设置</p><ol><li><p>每行数量设置<code>defaults write com.apple.dock springboard-columns -int 7</code>  </p></li><li><p>每列数量设置<code>defaults write com.apple.dock springboard-rows -int 7</code>  </p></li><li><p>修改后需要重启 Launchpad</p><p><code>defaults write com.apple.dock ResetLaunchPad -bool TRUE;killall Dock</code></p></li><li><p>重置 Launchpad</p><pre class="line-numbers language-shell"><code class="language-shell">defaults write com.apple.dock springboard-rows Defaultdefaults write com.apple.dock springboard-columns Defaultdefaults write com.apple.dock ResetLaunchPad -bool TRUEkillall Dock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ol><ol start="4"><li>Mac Dock栏自动显示和隐藏没有延迟：<ul><li>设置无延迟<code>defaults write com.apple.Dock autohide-delay -float 0 &amp;&amp; killall Dock</code></li><li>恢复<code>defaults delete com.apple.Dock autohide-delay &amp;&amp; killall Dock</code></li></ul></li></ol><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><h4 id="Homebrew"><a href="#Homebrew" class="headerlink" title="Homebrew"></a>Homebrew</h4><p>包管理工具，官方称之为The missing package manager for OS X.<br>官网：<a href="https://brew.sh" target="_blank" rel="noopener external nofollow noreferrer">https://brew.sh</a></p><pre class="line-numbers language-shell"><code class="language-shell">/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信 macOS 客户端撤回拦截与多开</title>
      <link href="/posts/26386.html"/>
      <url>/posts/26386.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="微信-macOS-客户端撤回拦截与多开"><a href="#微信-macOS-客户端撤回拦截与多开" class="headerlink" title="微信 macOS 客户端撤回拦截与多开"></a>微信 macOS 客户端撤回拦截与多开</h1><h2 id="mac-微信小助手"><a href="#mac-微信小助手" class="headerlink" title="mac 微信小助手"></a>mac 微信小助手</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a><a href="https://github.com/MustangYM/WeChatExtension-ForMac" target="_blank" rel="noopener external nofollow noreferrer">链接</a></h3><p><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/liangpengjie/mumuimgs/20191223121904.jpg" alt="-w988"><br><img src="/medias/loading.gif" data-original="https://cdn.jsdelivr.net/gh/liangpengjie/mumuimgs/20191223121911.jpg" alt="-w999"></p><h3 id="Alfred"><a href="#Alfred" class="headerlink" title="Alfred"></a><a href="https://github.com/TKkk-iOSer/wechat-alfred-workflow" target="_blank" rel="noopener external nofollow noreferrer">Alfred</a></h3><p><img src="/medias/loading.gif" data-original="https://i.loli.net/2019/11/14/nbiPaHyhoFWzKLp.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> soft </category>
          
      </categories>
      
      
        <tags>
            
            <tag> soft </tag>
            
            <tag> wechat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git 撤销操作</title>
      <link href="/posts/33105.html"/>
      <url>/posts/33105.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="git-撤销-commit"><a href="#git-撤销-commit" class="headerlink" title="git 撤销 commit"></a>git 撤销 commit</h2><blockquote><p>今天在合并分支时出错，想撤销 commit，发现 idea 自身对撤销 commit 的操作并不友好，于是翻了翻 git 手册，整理下撤销操作的命令！</p></blockquote><ol><li><p>覆盖上次提交 </p><p>如果本次提交漏了那个文件，可以使用<code>amend</code>来重复覆盖上次提交，最终会只有一个提交，第二次提交的结果会覆盖第一次提交的结果。</p><pre class="line-numbers language-shell"><code class="language-shell">git commit --amend<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更改提交信息   </p><p>如果上次提交后未做任何修改，再次执行就会只覆盖原来的提交信息。</p></li><li><p>取消提交的文件</p><p>取消本次提交的文件   </p><p>不删除工作空间改动，撤销 commit 和 add . 操作</p><pre class="line-numbers language-shell"><code class="language-shell">git reset --mixed HEAD^<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><p>可以添加文件名字指定文件撤销。</p></li><li><p><code>HEAD^</code> 等价于 <code>HEAD~1</code></p></li><li><p><code>HEAD^</code>的意思是上一个版本，也可以写成<code>HEAD~1</code></p></li><li><p>如果你进行了2次commit，想都撤回，可以使用<code>HEAD~2</code></p></li><li><p>参数： </p><ul><li><p><code>--mixed</code><br>不删除工作空间改动代码，撤销 <code>commit</code>，并且撤销 <code>git add .</code> 操作<br>这个为默认参数,<code>git reset --mixed HEAD^</code> 和 <code>git reset HEAD^</code> 效果是一样的。</p></li><li><p><code>--soft</code><br>不删除工作空间改动代码，撤销<code>commit</code>，不撤销<code>git add .</code> 。</p></li><li><p><code>--hard</code><br>删除工作空间改动代码，撤销<code>commit</code>，撤销<code>git add .</code> </p><p>注意完成这个操作后，就恢复到了上一次的 commit 状态。</p></li></ul></li></ul></li></ol><h2 id="git-分支"><a href="#git-分支" class="headerlink" title="git 分支"></a>git 分支</h2><p>清除本地有而远端没有的无用分支</p><pre class="line-numbers language-shell"><code class="language-shell">git remote prune origin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> commit </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
